# This workflow runs after a push or when recieving a
# repository_dispatch event. Currently vpinball/pinmame will
# do this after a successful build of libpinmame.
#
# To determine the nuget version:
#
# Clone PinMAME
# Parse version from src/version.c
# Get commit count since start of 3.4. 
# Generate semver from version and commit count, ex: 3.4.0-preview.20
# Query nuget api to see if package matching semver already exists

name: PinMame-Native
on:
  repository_dispatch:
    types: [build]
  push:
    paths:
    - "native/**"
    - ".github/workflows/pinmame-native.yml"

env:
  PUBLISH: ${{ secrets.PUBLISH }}

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      semver: ${{ steps.version.outputs.semver }}
      exists: ${{ steps.version.outputs.exists }}
    steps:
      - uses: actions/checkout@v2
        with:
          repository: vpinball/pinmame 
          fetch-depth: 0
      - id: version
        run: |
          VERSION=$(npx semver -c $(grep -o "[0-9\.]\+" src/version.c | head -1))
          PREVIEW=$(git rev-list 06fbe2826c1563f10576ae68984672dcffa481ac..HEAD --count)
          SEMVER="${VERSION}-preview.${PREVIEW}"
          EXISTS=$(if [[ $(curl https://api.nuget.org/v3-flatcontainer/pinmame.native/index.json | grep \"${SEMVER}\") ]]; then echo "true"; else echo "false"; fi)
          echo "::set-output name=semver::${SEMVER}"
          echo "::set-output name=exists::${EXISTS}"
      - uses: actions/upload-artifact@v2
        with:
          name: pinmame 
          path: |
            ./
            !.git

  build-win-x64:
    runs-on: windows-latest
    needs: [ version ]
    if: github.event_name == 'repository_dispatch' || github.event_name == 'push'
    steps:
      - uses: actions/download-artifact@v2
        with:
           name: pinmame
      - name: Build
        run: |
          cd cmake\libpinmame
          copy CMakeLists_win-x64.txt CMakeLists.txt
          cmake -G "Visual Studio 16 2019" -A x64 .
          cmake --build . --config Release
      - uses: actions/upload-artifact@v2
        with:
          name: win-x64
          path: cmake/libpinmame/lib/libpinmame-*.dll
          
  build-win-x86:
    runs-on: windows-latest
    needs: [ version ]
    if: github.event_name == 'repository_dispatch' || github.event_name == 'push'
    steps:
      - uses: actions/download-artifact@v2
        with:
           name: pinmame
      - name: Build
        run: |
          cd cmake\libpinmame
          copy CMakeLists_win-x86.txt CMakeLists.txt
          cmake -G "Visual Studio 16 2019" -A Win32 .
          cmake --build . --config Release
      - uses: actions/upload-artifact@v2
        with:
          name: win-x86
          path: cmake/libpinmame/lib/libpinmame-*.dll
        
  build-osx-x64:
    runs-on: macos-latest
    needs: [ version ]
    if: github.event_name == 'repository_dispatch' || github.event_name == 'push'
    steps:
      - uses: actions/download-artifact@v2
        with:
           name: pinmame
      - name: Build
        run: |
          cd cmake/libpinmame
          cp CMakeLists_osx-x64.txt CMakeLists.txt
          cmake -DCMAKE_BUILD_TYPE=Release .
          cmake --build . 
      - uses: actions/upload-artifact@v2
        with:
          name: osx-x64
          path: cmake/libpinmame/lib/libpinmame.*.dylib

  build-linux-x64:
    runs-on: ubuntu-latest
    needs: [ version ]
    if: github.event_name == 'repository_dispatch' || github.event_name == 'push'
    steps:
      - uses: actions/download-artifact@v2
        with:
           name: pinmame
      - name: Build
        run: |
          cd cmake/libpinmame
          cp CMakeLists_linux-x64.txt CMakeLists.txt
          cmake -DCMAKE_BUILD_TYPE=Release . 
          cmake --build .
      - uses: actions/upload-artifact@v2
        with:
          name: linux-x64
          path: cmake/libpinmame/lib/libpinmame.so.*

  build-nuget:
    runs-on: ubuntu-latest
    needs: [ version, build-win-x64, build-win-x86, build-osx-x64, build-linux-x64 ]
    if: github.event_name == 'repository_dispatch' || github.event_name == 'push'
    steps:
      - uses: nuget/setup-nuget@v1
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: win-x64
          path: native/nuget/win-x64
      - uses: actions/download-artifact@v2
        with:
          name: win-x86
          path: native/nuget/win-x86
      - uses: actions/download-artifact@v2
        with:
          name: osx-x64
          path: native/nuget/osx-x64
      - uses: actions/download-artifact@v2
        with:
          name: linux-x64
          path: native/nuget/linux-x64
      - name: Pack
        run: |
          cd native/nuget
          sed -i 's/__VERSION__/${{ needs.version.outputs.semver }}/g' *.nuspec
          nuget pack PinMame.Native.win-x64.nuspec -OutputDirectory nupkg
          nuget pack PinMame.Native.win-x86.nuspec -OutputDirectory nupkg
          nuget pack PinMame.Native.osx-x64.nuspec -OutputDirectory nupkg
          nuget pack PinMame.Native.linux-x64.nuspec -OutputDirectory nupkg
          nuget pack PinMame.Native.nuspec -OutputDirectory nupkg
      - uses: actions/upload-artifact@v2
        with:
          name: nupkg
          path: native/nuget/nupkg

  publish:
    runs-on: ubuntu-latest
    needs: [ version, build-nuget ]
    if: needs.version.outputs.exists == 'false' && (github.event_name == 'repository_dispatch' || (github.event_name == 'push' && github.ref == 'refs/heads/master'))
    steps:
      - uses: nuget/setup-nuget@v1
      - uses: actions/download-artifact@v2
        with:
          name: nupkg
      - name: Publish
        if: ${{ env.PUBLISH == 'true' }}
        run: |
          nuget push PinMame.Native.${{ needs.version.outputs.semver }}.nupkg -ApiKey ${{ secrets.NUGET_KEY }} -src https://api.nuget.org/v3/index.json
          nuget push PinMame.Native.win-x64.${{ needs.version.outputs.semver }}.nupkg -ApiKey ${{ secrets.NUGET_KEY }} -src https://api.nuget.org/v3/index.json
          nuget push PinMame.Native.win-x86.${{ needs.version.outputs.semver }}.nupkg -ApiKey ${{ secrets.NUGET_KEY }} -src https://api.nuget.org/v3/index.json
          nuget push PinMame.Native.osx-x64.${{ needs.version.outputs.semver }}.nupkg -ApiKey ${{ secrets.NUGET_KEY }} -src https://api.nuget.org/v3/index.json
          nuget push PinMame.Native.linux-x64.${{ needs.version.outputs.semver }}.nupkg -ApiKey ${{ secrets.NUGET_KEY }} -src https://api.nuget.org/v3/index.json
