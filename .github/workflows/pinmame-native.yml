# This action runs every four hours or on a push
# Clone PinMAME, get version, get commit count since start of 3.4.
# Generate semver from version and commit count, ex: 3.4.0-preview.20
# Query nuget api to see if package matching semver already exists
#
# If push, always run build jobs 
# If cron, and semver does not exist, run build jobs
#
# If builds pass, and in master, generate nugets
# Publish only if nuget package matching semver does not exist

name: PinMame-Native
on:
  schedule:
    - cron: "0 */4 * * *"
  push:
    paths:
    - "pinmame/**"
    - ".github/workflows/pinmame-native.yml"

env:
  PUBLISH: ${{ secrets.PUBLISH }}

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      semver: ${{ steps.version.outputs.semver }}
      exists: ${{ steps.version.outputs.exists }}
    steps:
      - uses: actions/checkout@v2
        with:
          repository: 'vpinball/pinmame' 
          fetch-depth: 0
      - id: version
        run: |
          VERSION=$(npx semver -c $(grep -o "[0-9\.]\+" src/version.c | head -1))
          PREVIEW=$(git rev-list ed09e8833ebaf9b2ffc3989f3f7d179e5da624b5..HEAD --count)
          SEMVER="${VERSION}-preview.${PREVIEW}"
          EXISTS=$(if [[ $(curl https://api.nuget.org/v3-flatcontainer/pinmame.native/index.json | grep \"${SEMVER}\") ]]; then echo "true"; else echo "false"; fi)
          echo "::set-output name=semver::${SEMVER}"
          echo "::set-output name=exists::${EXISTS}"

  build-win-x64:
    runs-on: windows-latest
    needs: [ version ]
    if: github.event_name == 'push' || needs.version.outputs.exists == 'false'
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: |
          cd pinmame
          copy CMakeLists_win-x64.txt CMakeLists.txt
          cmake -G "Visual Studio 16 2019" -A x64 -B build
          cmake --build build --config Release
      - uses: actions/upload-artifact@v2
        with:
          name: win-x64
          path: pinmame/build/lib/libpinmame-*.dll
          
  build-win-x86:
    runs-on: windows-latest
    needs: [ version ]
    if: github.event_name == 'push' || needs.version.outputs.exists == 'false'
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: |
          cd pinmame
          copy CMakeLists_win-x86.txt CMakeLists.txt
          cmake -G "Visual Studio 16 2019" -A Win32 -B build
          cmake --build build --config Release
      - uses: actions/upload-artifact@v2
        with:
          name: win-x86
          path: pinmame/build/lib/libpinmame-*.dll
        
  build-osx-x64:
    runs-on: macos-latest
    needs: [ version ]
    if: github.event_name == 'push' || needs.version.outputs.exists == 'false'
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: |
          cd pinmame
          cp CMakeLists_osx-x64.txt CMakeLists.txt
          cmake -B build
          cmake --build build
      - uses: actions/upload-artifact@v2
        with:
          name: osx-x64
          path: pinmame/build/lib/libpinmame.*.dylib

#  build-linux-x64:
#    runs-on: ubuntu-latest
#    needs: [ version ]
#    if: github.event_name == 'push' || needs.version.outputs.exists == 'false'
#    steps:
#      - uses: actions/checkout@v2
#      - name: Build
#        run: |
#          cd pinmame
#          cp CMakeLists_linux-x64.txt CMakeLists.txt
#          cmake -B build
#          cmake --build build
#      - uses: actions/upload-artifact@v2
#        with:
#          name: linux-x64
#          path: pinmame/build/lib/libpinmame.so.*

  build-nuget:
    runs-on: ubuntu-latest
    needs: [ version, build-win-x64, build-win-x86, build-osx-x64 ]
    if: github.ref == 'refs/heads/master' && (github.event_name == 'push' || needs.version.outputs.exists == 'false')
    steps:
      - uses: nuget/setup-nuget@v1
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
           path: pinmame/nuget 
      - name: Pack
        run: |
          cd pinmame/nuget
          sed -i 's/__VERSION__/${{ needs.version.outputs.semver }}/g' *.nuspec
          nuget pack PinMame.Native.win-x64.nuspec -OutputDirectory nupkg
          nuget pack PinMame.Native.win-x86.nuspec -OutputDirectory nupkg
          nuget pack PinMame.Native.osx-x64.nuspec -OutputDirectory nupkg
          # nuget pack PinMame.Native.linux-x64.nuspec -OutputDirectory nupkg
          nuget pack PinMame.Native.nuspec -OutputDirectory nupkg
      - uses: actions/upload-artifact@v2
        with:
          name: nupkg
          path: pinmame/nuget/nupkg

  publish:
    runs-on: ubuntu-latest
    needs: [ version, build-nuget ]
    if: needs.version.outputs.exists == 'false' 
    steps:
      - uses: nuget/setup-nuget@v1
      - uses: actions/download-artifact@v2
      - name: Publish
        if: ${{ env.PUBLISH == 'true' }}
        run: |
          nuget push nupkg/PinMame.Native.${{ needs.version.outputs.semver }}.nupkg -ApiKey ${{ secrets.NUGET_KEY }} -src https://api.nuget.org/v3/index.json
          nuget push nupkg/PinMame.Native.win-x64.${{ needs.version.outputs.semver }}.nupkg -ApiKey ${{ secrets.NUGET_KEY }} -src https://api.nuget.org/v3/index.json
          nuget push nupkg/PinMame.Native.win-x86.${{ needs.version.outputs.semver }}.nupkg -ApiKey ${{ secrets.NUGET_KEY }} -src https://api.nuget.org/v3/index.json
          nuget push nupkg/PinMame.Native.osx-x64.${{ needs.version.outputs.semver }}.nupkg -ApiKey ${{ secrets.NUGET_KEY }} -src https://api.nuget.org/v3/index.json
          # nuget push nupkg/PinMame.Native.linux-x64.${{ needs.version.outputs.semver }}.nupkg -ApiKey ${{ secrets.NUGET_KEY }} -src https://api.nuget.org/v3/index.json
